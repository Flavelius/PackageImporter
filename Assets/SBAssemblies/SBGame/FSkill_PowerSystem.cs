//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using Engine;
using SBAI;
using SBAIScripts;
using SBBase;
using SBGame;
using SBGamePlay;
using SBMiniGames;
using System;
using System.Collections;
using System.Collections.Generic;
using SBAssemblies;

namespace SBGame
{
    
    
    [System.Serializable] public class FSkill_PowerSystem : UObject
    {
        
        [Sirenix.OdinInspector.FoldoutGroup("targeting")]
        [FieldConfig()]
        public float NumPartyMembersInFight;
        
        [Sirenix.OdinInspector.FoldoutGroup("targeting")]
        [FieldConfig()]
        public float NumPetsInFight;
        
        [Sirenix.OdinInspector.FoldoutGroup("targeting")]
        [FieldConfig()]
        public float NumBloodLinksInFight;
        
        [Sirenix.OdinInspector.FoldoutGroup("targeting")]
        [FieldConfig()]
        public float CollateralDamagePercentage;
        
        [Sirenix.OdinInspector.FoldoutGroup("targeting")]
        [FieldConfig()]
        public float HitChance;
        
        [Sirenix.OdinInspector.FoldoutGroup("targeting")]
        [FieldConfig()]
        public float RearHitChance;
        
        [Sirenix.OdinInspector.FoldoutGroup("targeting")]
        [FieldConfig()]
        public float NonCombatReadyDamageIncrease;
        
        [Sirenix.OdinInspector.FoldoutGroup("Stats")]
        [FieldConfig()]
        public Game_CharacterStats.CharacterStatsRecord TriggerPawnCharacterStats;
        
        [Sirenix.OdinInspector.FoldoutGroup("Stats")]
        [FieldConfig()]
        public Game_CharacterStats.CharacterStatsRecord TargetPawnCharacterStats;
        
        [Sirenix.OdinInspector.FoldoutGroup("Direct")]
        [FieldConfig()]
        public float HealPower;
        
        [Sirenix.OdinInspector.FoldoutGroup("Direct")]
        [FieldConfig()]
        public float StatePhysiquePower;
        
        [Sirenix.OdinInspector.FoldoutGroup("Direct")]
        [FieldConfig()]
        public float StateMoralePower;
        
        [Sirenix.OdinInspector.FoldoutGroup("Direct")]
        [FieldConfig()]
        public float StateConcentrationPower;
        
        [Sirenix.OdinInspector.FoldoutGroup("Direct")]
        [FieldConfig()]
        public float FrontDamageIncrease;
        
        [Sirenix.OdinInspector.FoldoutGroup("Direct")]
        [FieldConfig()]
        public float RearDamageIncrease;
        
        [Sirenix.OdinInspector.FoldoutGroup("Condition")]
        [FieldConfig()]
        public ConditionFireChance FireChance_OnHitBy;
        
        [Sirenix.OdinInspector.FoldoutGroup("Condition")]
        [FieldConfig()]
        public ConditionFireChance FireChance_OnHitWith;
        
        [Sirenix.OdinInspector.FoldoutGroup("Condition")]
        [FieldConfig()]
        public ConditionFireChance FireChance_OnMissWith;
        
        [Sirenix.OdinInspector.FoldoutGroup("Condition")]
        [FieldConfig()]
        public ConditionFireChance FireChance_OnSheatheWeapon;
        
        [Sirenix.OdinInspector.FoldoutGroup("Condition")]
        [FieldConfig()]
        public ConditionFireChance FireChance_OnDrawWeapon;
        
        [Sirenix.OdinInspector.FoldoutGroup("Condition")]
        [FieldConfig()]
        public ConditionFireChance FireChance_OnMove;
        
        [Sirenix.OdinInspector.FoldoutGroup("Condition")]
        [FieldConfig()]
        public ConditionFireChance FireChance_OnDeath;
        
        [Sirenix.OdinInspector.FoldoutGroup("Condition")]
        [FieldConfig()]
        public ConditionFireChance FireChance_OnUnshift;
        
        [Sirenix.OdinInspector.FoldoutGroup("Condition")]
        [FieldConfig()]
        public float FireChance_Melee;
        
        [Sirenix.OdinInspector.FoldoutGroup("Condition")]
        [FieldConfig()]
        public float FireChance_Ranged;
        
        [Sirenix.OdinInspector.FoldoutGroup("Condition")]
        [FieldConfig()]
        public float FireChance_Magic;
        
        [Sirenix.OdinInspector.FoldoutGroup("Condition")]
        [FieldConfig()]
        public float FireChance_Rune;
        
        [Sirenix.OdinInspector.FoldoutGroup("Condition")]
        [FieldConfig()]
        public float FireChance_Soul;
        
        [Sirenix.OdinInspector.FoldoutGroup("Condition")]
        [FieldConfig()]
        public float FireChance_Spirit;
        
        [Sirenix.OdinInspector.FoldoutGroup("Condition")]
        [FieldConfig()]
        public float FireChance_SpecificEffectType;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffAffinity")]
        [FieldConfig()]
        public float SoulAffinityPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffAffinity")]
        [FieldConfig()]
        public float RuneAffinityPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffAffinity")]
        [FieldConfig()]
        public float SpiritAffinityPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffAlter")]
        [FieldConfig()]
        public float AlterEffectAbsolutePowerPerUse;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffAlter")]
        [FieldConfig()]
        public float AlterEffectRelativePowerPerUse;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffAlter")]
        [FieldConfig()]
        public float OutgoingAllEffectsPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffAlter")]
        [FieldConfig()]
        public float OutgoingSpecificEffectsPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffAlter")]
        [FieldConfig()]
        public float IncomingAllEffectsPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffAlter")]
        [FieldConfig()]
        public float IncomingSpecificEffectsPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffAttribute")]
        [FieldConfig()]
        public float BodyPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffAttribute")]
        [FieldConfig()]
        public float MindPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffAttribute")]
        [FieldConfig()]
        public float FocusPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffDegeneration")]
        [FieldConfig()]
        public float PhysiqueDegenerationPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffDegeneration")]
        [FieldConfig()]
        public float MoraleDegenerationPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffDegeneration")]
        [FieldConfig()]
        public float ConcentrationDegenerationPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffRegeneration")]
        [FieldConfig()]
        public float PhysiqueRegenerationPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffRegeneration")]
        [FieldConfig()]
        public float MoraleRegenerationPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffRegeneration")]
        [FieldConfig()]
        public float ConcentrationRegenerationPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffRegeneration")]
        [FieldConfig()]
        public float HealthRegenerationPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffDirectionalDmg")]
        [FieldConfig()]
        public float DirectionalDamageRearPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffDirectionalDmg")]
        [FieldConfig()]
        public float DirectionalDamageFrontPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffDisableSkillUse")]
        [FieldConfig()]
        public float DisableAllSkillUsePowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffDisableSkillUse")]
        [FieldConfig()]
        public float DisableMagicSkillUsePowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffDisableSkillUse")]
        [FieldConfig()]
        public float DisableMeleeSkillUsePowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffDisableSkillUse")]
        [FieldConfig()]
        public float DisableRangedSkillUsePowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffDisableSkillUse")]
        [FieldConfig()]
        public float DisableNoneMagicSkillUsePowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffDisableSkillUse")]
        [FieldConfig()]
        public float DisableSoulMagicSkillUsePowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffDisableSkillUse")]
        [FieldConfig()]
        public float DisableRuneMagicSkillUsePowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffDisableSkillUse")]
        [FieldConfig()]
        public float DisableSpiritMagicSkillUsePowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffImmune")]
        [FieldConfig()]
        public float ImmuneForAllPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffImmune")]
        [FieldConfig()]
        public float ImmuneForMagicPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffImmune")]
        [FieldConfig()]
        public float ImmuneForMeleePowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffImmune")]
        [FieldConfig()]
        public float ImmuneForRangedPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffImmune")]
        [FieldConfig()]
        public float ImmuneForNoneMagicPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffImmune")]
        [FieldConfig()]
        public float ImmuneForSoulMagicPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffImmune")]
        [FieldConfig()]
        public float ImmuneForRuneMagicPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffImmune")]
        [FieldConfig()]
        public float ImmuneForSpiritMagicPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffImmune")]
        [FieldConfig()]
        public float ImmuneForSpecificEffectPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffMaxHealth")]
        [FieldConfig()]
        public float MaxHealthPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffPePRank")]
        [FieldConfig()]
        public float PePRankPowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffResistance")]
        [FieldConfig()]
        public float AttackTypeMeleeResistancePowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffResistance")]
        [FieldConfig()]
        public float AttackTypeRangedResistancePowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffResistance")]
        [FieldConfig()]
        public float AttackTypeMagicResistancePowerPerSecond;
        
        [Sirenix.OdinInspector.FoldoutGroup("DuffResistance")]
        [FieldConfig()]
        public float AttackTypeAllResistancePowerPerSecond;
        
        public FSkill_PowerSystem()
        {
        }
        
        [System.Serializable] public struct ConditionFireChance
        {
            
            public float MaxFiresPerSecond;
            
            public float MaxFires;
            
            public float FireChance_While_Avoiding;
            
            public float FireChance_While_Seeking;
        }
    }
}
