//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using Engine;
using SBAI;
using SBAIScripts;
using SBBase;
using SBGame;
using SBGamePlay;
using SBMiniGames;
using System;
using System.Collections;
using System.Collections.Generic;
using Framework.Attributes;

namespace SBGame
{
    
    
    [System.Serializable] public class Appearance_Base : UObject
    {
        
        //[TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Base")]
        //public LocalizedString Name;
        
        [Sirenix.OdinInspector.FoldoutGroup("Base")]
        public LocalizedString Description;
        
        [Sirenix.OdinInspector.FoldoutGroup("Base")]
        [System.NonSerialized, UnityEngine.HideInInspector]
        public string Palette1;
        
        [Sirenix.OdinInspector.FoldoutGroup("Base")]
        [System.NonSerialized, UnityEngine.HideInInspector]
        public string Palette2;
        
        [Sirenix.OdinInspector.FoldoutGroup("Base")]
        public byte PaletteDefaultColor1;
        
        [Sirenix.OdinInspector.FoldoutGroup("Base")]
        public byte PaletteDefaultColor2;
        
        [System.NonSerialized, UnityEngine.HideInInspector]
        [FieldTransient()]
        public byte SortHelp;
        
        [Sirenix.OdinInspector.FoldoutGroup("_LowLevel")]
        public byte Part;
        
        [Sirenix.OdinInspector.FoldoutGroup("Base")]
        public bool SelectableInCharacterCreation;
        
        [Sirenix.OdinInspector.FoldoutGroup("Base")]
        public byte ColorMode;
        
        [Sirenix.OdinInspector.FoldoutGroup("Base")]
        public bool ShowGuildLogo;
        
        public byte Specular;
        
        [Sirenix.OdinInspector.FoldoutGroup("Attachments")]
        public List<Attachment> Attachments = new List<Attachment>();
        
        [Sirenix.OdinInspector.FoldoutGroup("Constraints")]
        public bool ExcludeHumans;
        
        [Sirenix.OdinInspector.FoldoutGroup("Constraints")]
        public bool ExcludeDaevi;
        
        [Sirenix.OdinInspector.FoldoutGroup("Constraints")]
        public bool ExcludeMale;
        
        [Sirenix.OdinInspector.FoldoutGroup("Constraints")]
        public bool ExcludeFemale;
        
        [Sirenix.OdinInspector.FoldoutGroup("Constraints")]
        public bool ExcludeFat;
        
        [Sirenix.OdinInspector.FoldoutGroup("Constraints")]
        public bool ExcludeSkinny;
        
        [Sirenix.OdinInspector.FoldoutGroup("Constraints")]
        public bool ExcludeHulk;
        
        [Sirenix.OdinInspector.FoldoutGroup("Constraints")]
        public bool ExcludeAthletic;
        
        [Sirenix.OdinInspector.FoldoutGroup("Constraints")]
        public bool ExcludeHumansInCharacterCreation;
        
        [Sirenix.OdinInspector.FoldoutGroup("Constraints")]
        public bool ExcludeDaeviInCharacterCreation;
        
        public bool ApplyToTorso;
        
        public bool ApplyToRightArmUpper;
        
        public bool ApplyToLeftArmUpper;
        
        public bool ApplyToRightArmLower;
        
        public bool ApplyToLeftArmLower;
        
        public bool ApplyToRightHand;
        
        public bool ApplyToLeftHand;
        
        public bool ApplyToPelvis;
        
        public bool ApplyToThighs;
        
        public bool ApplyToCalves;
        
        public bool ApplyToFeet;
        
        [System.NonSerialized, UnityEngine.HideInInspector]
        [FieldTransient()]
        public Item_Type _IT;
        
        [System.NonSerialized, UnityEngine.HideInInspector]
        [FieldTransient()]
        public int _AS_Index;
        
        [System.NonSerialized, UnityEngine.HideInInspector]
        [FieldTransient()]
        public bool _AS_Set;
        
        public Appearance_Base()
        {
        }
        
        [System.Serializable] public struct Attachment
        {
            
            public string MeshGroup;
            
            public byte SocketId;
            
            public byte Covers;
            
            public string AlternativeTexture;
        }
        
        [System.Serializable] public struct SubTextureLocation
        {
            
            public int Angle;
            
            public float Scale;
            
            public float CenterU;
            
            public float CenterV;
        }
        
        public enum ESpecularMode
        {
            
            Specular_None ,
            
            Specular_Metal ,
            
            Specular_Hair,
        }
        
        public enum EColorizeMode
        {
            
            Colorize_None ,
            
            Colorize_OneColor ,
            
            Colorize_TwoColor ,
            
            Colorize_Unreal ,
            
            Colorize_Skin,
        }
        
        public enum CoverageFlag
        {
            
            Covers_LeftAnkle ,
            
            Covers_Belt ,
            
            Covers_Chest ,
            
            Covers_Head ,
            
            Covers_HipLeft ,
            
            Covers_HipRight ,
            
            Covers_LeftLowerArm ,
            
            Covers_LeftShoulder ,
            
            Covers_LeftUpperArm ,
            
            Covers_LeftLowerLeg ,
            
            Covers_LeftUpperLeg ,
            
            Covers_RightLowerArm ,
            
            Covers_RightShoulder ,
            
            Covers_RightUpperArm ,
            
            Covers_RightLowerLeg ,
            
            Covers_RightUpperLeg ,
            
            Covers_Nothing ,
            
            Covers_RightAnkle,
        }
        
        public enum AppearanceSocket
        {
            
            AS_Head ,
            
            AS_RightPauldron ,
            
            AS_LeftPauldron ,
            
            AS_Chest ,
            
            AS_BackMain ,
            
            AS_LeftHandHolster ,
            
            AS_RightHandHolster ,
            
            AS_LeftBracer ,
            
            AS_RightBracer ,
            
            AS_LeftCalf ,
            
            AS_RightCalf ,
            
            AS_LeftThigh ,
            
            AS_RightThigh ,
            
            AS_Base ,
            
            AS_Belt ,
            
            AS_MainShoulderSheath ,
            
            AS_OffhandShoulderSheath ,
            
            AS_Shield ,
            
            AS_ShieldSheath,
        }
        
        public enum AppearancePart
        {
            
            AP_ChestClothes ,
            
            AP_LeftGlove ,
            
            AP_RightGlove ,
            
            AP_Pants ,
            
            AP_Shoes ,
            
            AP_HeadGearArmour ,
            
            AP_LeftShoulderArmour ,
            
            AP_RightShoulderArmour ,
            
            AP_LeftGauntlet ,
            
            AP_RightGauntlet ,
            
            AP_ChestArmour ,
            
            AP_Belt ,
            
            AP_LeftThigh ,
            
            AP_RightThigh ,
            
            AP_LeftShin ,
            
            AP_RightShin ,
            
            AP_MainWeapon ,
            
            AP_OffhandWeapon ,
            
            AP_Hair ,
            
            AP_MainSheath ,
            
            AP_OffhandSheath ,
            
            AP_Body ,
            
            AP_Head ,
            
            AP_Tattoo ,
            
            AP_ClassTattoo,
        }
    }
}
/*
final native event string GetStaticAttachmentStr(Game_Pawn aPawn,int aIndex);
final native event StaticMesh GetStaticAttachment(Game_Pawn aPawn,int aIndex);
*/
