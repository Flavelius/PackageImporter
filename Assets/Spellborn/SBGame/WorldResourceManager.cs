//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using Engine;
using SBAI;
using SBAIScripts;
using SBBase;
using SBGame;
using SBGamePlay;
using SBMiniGames;
using System;
using System.Collections;
using System.Collections.Generic;

namespace SBGame
{
    
    
    [System.Serializable] public class WorldResourceManager : Actor
    {
        
        [Sirenix.OdinInspector.FoldoutGroup("WorldResourceManager")]
        public int MaxActive;
        
        [Sirenix.OdinInspector.FoldoutGroup("WorldResourceManager")]
        public float RespawnTime;
        
        [System.NonSerialized, UnityEngine.HideInInspector]
        [FieldTransient()]
        public List<RegisteredResource> ManagedResources = new List<RegisteredResource>();
        
        [System.NonSerialized, UnityEngine.HideInInspector]
        [FieldTransient()]
        public float RespawnTimer;
        
        public WorldResourceManager()
        {
        }
        
        [System.Serializable] public struct RegisteredResource
        {
            
            public WorldResource Resource;
            
            public float Timer;
        }
    }
}
/*
function DisableResource(WorldResource aResource) {
local int ri;
ri = 0;                                                                     
while (ri < ManagedResources.Length) {                                      
if (ManagedResources[ri].Resource == aResource) {                         
ManagedResources[ri].Timer = Level.TimeSeconds;                         
ManagedResources[ri].Resource.sv_SetEnabled(False);                     
if (RespawnTimer < 0.00000000) {                                        
RespawnTimer = RespawnTime;                                           
}
}
ri++;                                                                     
}
}
*/
