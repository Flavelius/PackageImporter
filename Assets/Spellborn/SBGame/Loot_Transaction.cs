//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using Engine;
using SBAI;
using SBAIScripts;
using SBBase;
using SBGame;
using SBGamePlay;
using SBMiniGames;
using System;
using System.Collections;
using System.Collections.Generic;

namespace SBGame
{
    
    
    [System.Serializable] public class Loot_Transaction : UObject
    {
        
        public const float MINIMUM_TIMER_VALUE = 0.5F;
        
        public const int LOOT_MODE_NR_OPTIONS = 3;
        
        public const int LOOT_MODE_MASTER = 2;
        
        public const int LOOT_MODE_GROUP = 1;
        
        public const int LOOT_MODE_FREE_FOR_ALL = 0;
        
        [System.NonSerialized, UnityEngine.HideInInspector]
        [FieldTransient()]
        public int mTransactionID;
        
        [System.NonSerialized, UnityEngine.HideInInspector]
        [FieldTransient()]
        public List<DroppedLootItem> lootItems = new List<DroppedLootItem>();
        
        [System.NonSerialized, UnityEngine.HideInInspector]
        [FieldTransient()]
        public List<Game_Pawn> mReceiverList = new List<Game_Pawn>();
        
        [System.NonSerialized, UnityEngine.HideInInspector]
        [FieldTransient()]
        public List<GroupLootSelection> SelectedDroppedItems = new List<GroupLootSelection>();
        
        [System.NonSerialized, UnityEngine.HideInInspector]
        [FieldTransient()]
        public bool mTimedTransaction;
        
        [System.NonSerialized, UnityEngine.HideInInspector]
        [FieldTransient()]
        public float mCurrentTimerValue;
        
        [System.NonSerialized, UnityEngine.HideInInspector]
        [FieldTransient()]
        public byte mLootMode;
        
        public Loot_Transaction()
        {
        }
        
        [System.Serializable] public struct DroppedLootItem
        {
            
            public int LootItemID;
            
            public LootTable.DroppedItem Item;
            
            public bool Given;
        }
        
        [System.Serializable] public struct GroupLootSelection
        {
            
            public int DroppedItemIndex;
            
            public List<Game_Pawn> NeedList;
            
            public List<Game_Pawn> GreedList;
        }
    }
}
/*
final native function sv_GiveItemCompleted(int aErrorCode,int aLootItemID);
*/
