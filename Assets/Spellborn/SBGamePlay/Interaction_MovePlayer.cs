//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using Engine;
using SBAI;
using SBAIScripts;
using SBBase;
using SBGame;
using SBGamePlay;
using SBMiniGames;
using System;
using System.Collections;
using System.Collections.Generic;

namespace SBGamePlay
{
    
    
    [System.Serializable] public class Interaction_MovePlayer : Interaction_Component
    {
        
        [Sirenix.OdinInspector.FoldoutGroup("Interaction_MovePlayer")]
        public float DistanceBeforeSnap;
        
        [System.NonSerialized, UnityEngine.HideInInspector]
        [FieldTransient()]
        private Vector mOriginalLocation;
        
        [System.NonSerialized, UnityEngine.HideInInspector]
        [FieldTransient()]
        private Vector mTargetLocation;
        
        public Interaction_MovePlayer()
        {
        }
    }
}
/*
function SvOnStart(Game_Actor aOwner,Game_Pawn aInstigator,bool aReverse) {
local InteractiveLevelElement ile;
Super.SvOnStart(aOwner,aInstigator,aReverse);                               
ile = InteractiveLevelElement(aOwner);                                      
if (aInstigator != None && ile != None) {                                   
if (!aReverse) {                                                          
mOriginalLocation = aInstigator.Location;                               
mTargetLocation = ile.AbsPosition;                                      
} else {                                                                  
mTargetLocation = mOriginalLocation;                                    
}
aInstigator.sv_MoveTo(mTargetLocation,None,DistanceBeforeSnap);           
}
}
*/
