//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using Engine;
using System.Collections.Generic;


namespace SBGamePlay
{


    public class SBAudioPlayer : SBAudio_Base
    {
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="SBAudioPlayer")]
        public byte MaximumVolume;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="SBAudioPlayer")]
        public bool Looping;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="SBAudioPlayer")]
        public bool Locational;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="SBAudioPlayer")]
        public int Pitch;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="SBAudioPlayer")]
        public byte AudioType;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Trigger")]
        public byte InitialTrigger;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Trigger")]
        public byte LaterTriggers;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Trigger")]
        public float TriggerFadeTime;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Trigger")]
        public float UnTriggerFadeTime;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Sounds")]
        public List<SBSoundEditor> Sounds = new List<SBSoundEditor>();
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public List<SBSound> CachedSounds = new List<SBSound>();
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public bool bCachedSoundsDirty;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public bool bTriggeredOnce;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public bool bBaseVolumeCached;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public bool bPreventNewAudio;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public Vector MeanLocation;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public SBAudioManager AudioManager;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Modifiers")]
        public List<SBAudioModifierProps> ModifierProperties = new List<SBAudioModifierProps>();
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public List<SBAudioModifier> ModifierInstances = new List<SBAudioModifier>();
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float ActualPitch;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int SoundFlags;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float ActualMaxVolume;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float CurrentVolume;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public SBPlayerActiveAudio DayAudio;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public SBPlayerActiveAudio NightAudio;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public SBPlayerActiveAudio IndependantAudio;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        private byte mCachedTriggerType;
        
        public SBAudioPlayer()
        {
        }
        
        public struct SBPlayerActiveAudio
        {
            
            public int Index;
            
            public int TrackHandle;
            
            public bool bPlaying;
        }
        
        public struct SBAudioModifierProps
        {
            
            public byte ModifierType;
            
            public byte ModulationShape;
            
            public float ModulationTime;
            
            public float ModulationTimeDelta;
            
            public float ModulationTimeVariation;
            
            public float ModulationDamping;
            
            public float ModulationDampingVariation;
        }
        
        public struct SBExcludedAudio
        {
            
            public string ActorName;
            
            public byte AudioType;
            
            public bool Excluded;
        }
        
        public struct SBSoundEditor
        {
            
            public string OggFilename;
            
            public Sound Sound;
            
            public byte WhenPlayed;
        }
        
        public struct SBSound
        {
            
            public Sound Sound;
            
            public float StartTime;
            
            public float Duration;
            
            public bool IsOgg;
            
            public byte WhenPlayed;
        }
        
        public enum AudioModifierType
        {
            
            Audio_VolumeModulator,
        }
        
        public enum ESBTriggerBehaviour
        {
            
            SBTrigBehaviour_TimeDependant ,
            
            SBTrigBehaviour_Reset ,
            
            SBTrigBehaviour_None,
        }
        
        public enum ESBSoundTimeOfDay
        {
            
            SoundTOD_Always ,
            
            SoundTOD_Day ,
            
            SoundTOD_Night,
        }
    }
}
