//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using Engine;
using SBAI;
using SBAIScripts;
using SBBase;
using SBGame;
using SBGamePlay;
using SBMiniGames;
using System;
using System.Collections;
using System.Collections.Generic;
using TCosReborn.Framework.Common;


namespace SBGame
{
    
    
    public class SBWorldPortal : SBBasePortal
    {
        
        public SBWorldPortal()
        {
        }
    }
}
/*
function Touch(Actor Other) {
local Game_PlayerController PlayerController;
local Game_PlayerPawn playerPawn;
local Game_GameServer Engine;
Super.Touch(Other);                                                         
Engine = Game_GameServer(Class'Actor'.static.GetGameEngine());              
if (Engine != None && NavigationTag != "") {                                
playerPawn = Game_PlayerPawn(Other);                                      
if (playerPawn != None) {                                                 
PlayerController = Game_PlayerController(playerPawn.Controller);        
if (PlayerController != None) {                                         
if (playerPawn.sv_IsPayingPlayer() == False
&& IsFreeToPlayAllowed(Engine.GetPortalDestinationWorldID(self)) == False) {
playerPawn.sv2cl_FreeToPlayPortalForbidden_CallStub();              
return;                                                             
}
Engine.LoginToWorldByPortal(self,PlayerController.CharacterID);       
}
}
}
}
final native function bool IsFreeToPlayAllowed(int worldID);
*/
