//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using Engine;
using SBAI;
using SBAIScripts;
using SBBase;
using SBGame;
using SBGamePlay;
using SBMiniGames;
using System;
using System.Collections;
using System.Collections.Generic;
using TCosReborn.Framework.Common;


namespace SBGame
{
    
    
    public class FSkill_Event_Duff : FSkill_Event_FX
    {
        
        [TCosReborn.Framework.Attributes.FieldConstAttribute()]
        public List<FSkill_Event_Duff_DirectEff> DirectEffects = new List<FSkill_Event_Duff_DirectEff>();
        
        [TCosReborn.Framework.Attributes.FieldConstAttribute()]
        public List<FSkill_Event_Duff_DuffEff> DuffEffects = new List<FSkill_Event_Duff_DuffEff>();
        
        [TCosReborn.Framework.Attributes.FieldConstAttribute()]
        public FSkill_Event Event;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Events")]
        [TCosReborn.Framework.Attributes.FieldConstAttribute()]
        public float EventInterval;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Events")]
        [TCosReborn.Framework.Attributes.FieldConstAttribute()]
        public int EventRepeatCount;
        
        [TCosReborn.Framework.Attributes.FieldConstAttribute()]
        public List<FSkill_Event_Duff_CondEv> ConditionalEvents = new List<FSkill_Event_Duff_CondEv>();

        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category = "Duff")]
        [TCosReborn.Framework.Attributes.FieldConstAttribute()]
        public LocalizedString Name;

        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Duff")]
        [TCosReborn.Framework.Attributes.FieldConstAttribute()]
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        public Texture Icon;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Duff")]
        [TCosReborn.Framework.Attributes.FieldConstAttribute()]
        public bool Visible;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Duff")]
        [TCosReborn.Framework.Attributes.FieldConstAttribute()]
        public LocalizedString Description;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Duff")]
        [TCosReborn.Framework.Attributes.FieldConstAttribute()]
        public float Duration;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Duff")]
        [TCosReborn.Framework.Attributes.FieldConstAttribute()]
        public byte StackType;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Duff")]
        [TCosReborn.Framework.Attributes.FieldConstAttribute()]
        public int StackCount;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Duff")]
        [TCosReborn.Framework.Attributes.FieldConstAttribute()]
        public byte Priority;
        
        [TCosReborn.Framework.Attributes.FieldConstAttribute()]
        public bool RunUntilAbort;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public List<DirectEffectRunData> DirectEffectTimers = new List<DirectEffectRunData>();
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public List<DuffEffectRunData> DuffEffectTimers = new List<DuffEffectRunData>();
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public List<ConditionalEventRunData> ConditionalEventTimers = new List<ConditionalEventRunData>();
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float EventTimer;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int EventActualRepeatCount;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public bool DuffEventDone;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public bool UninstallWhenDone;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public List<Game_Pawn> Targets = new List<Game_Pawn>();
        
        public FSkill_Event_Duff()
        {
        }
        
        public struct ConditionalEventRunData
        {
            
            public float EarliestStartTime;
            
            public int UsesLeft;
        }
        
        public struct DirectEffectRunData
        {
            
            public float NextStartTime;
            
            public int ActualRepeatCount;
        }
        
        public struct DuffEffectRunData
        {
            
            public float NextStartTime;
            
            public int ActualRepeatCount;
            
            public List<FSkill_EffectClass_Duff.DuffRestoreData> History;
        }
    }
}
/*
final event string GetName() {
if (Len(Name.Text) > 0) {                                                   
return Name.Text;                                                         
} else {                                                                    
return "<Unnamed Buff or Debuff>";                                        
}
}
native function sv_FireCondition(array<Game_Pawn> aConditionTriggerPawn,Game_Pawn aOriginPawn,byte aCondition,optional byte aAttackType,optional byte aMagicType,optional byte aEffectType);
*/
