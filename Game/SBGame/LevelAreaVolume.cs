//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using Engine;
using SBAI;
using SBAIScripts;
using SBBase;
using SBGame;
using SBGamePlay;
using SBMiniGames;
using System;
using System.Collections;
using System.Collections.Generic;
using TCosReborn.Framework.Common;


namespace SBGame
{
    
    
    public class LevelAreaVolume : Volume
    {
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="LevelAreaVolume")]
        public Actor TriggeredActor;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="LevelAreaVolume")]
        public string RespawnPoint = string.Empty;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="LevelAreaVolume")]
        public LocalizedString LevelAreaName;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="ShardMap")]
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        public Material CurrentShardMap;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="ShardMap")]
        public bool IsShardMap;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="ShardMap")]
        public int MapSectionID;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="ShardMap")]
        public bool IsDiscovered;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="ShardMap")]
        public string mGEDFile = string.Empty;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="PvP")]
        public PvPSettings PvPSettings;
        
        public LevelAreaVolume()
        {
        }
    }
}
/*
event Touch(Actor anActor) {
if (SBRole == 9 || SBRole == 1) {                                           
if (TriggeredActor != None && anActor.IsA('Game_PlayerPawn')) {           
TriggeredActor.Trigger(self,Game_PlayerPawn(anActor));                  
}
}
}
*/
