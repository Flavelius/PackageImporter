//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using Engine;
using SBAI;
using SBAIScripts;
using SBBase;
using SBGame;
using SBGamePlay;
using SBMiniGames;
using System;
using System.Collections;
using System.Collections.Generic;
using TCosReborn.Framework.Common;


namespace Engine
{
    
    
    public class M3UParser : PlaylistParserBase
    {
        
        public FilePath ParsedPath;
        
        public M3UParser()
        {
        }
    }
}
/*
function string MatchPath(string str) {
local int i;
local array<string> Parts;
local string Result;
Split(str,static.GetPathSeparator(),Parts);                                 
i = 0;                                                                      
while (i < ParsedPath.DirectoryParts.Length) {                              
if (CompareNames(ParsedPath.DirectoryParts[i],Parts[0])) {                
goto jl008F;                                                            
}
if (Result != "") {                                                       
}
i++;                                                                      
}
if (i == ParsedPath.DirectoryParts.Length) {                                
Result = "";                                                              
}
i = 0;                                                                      
while (i < Parts.Length) {                                                  
if (Result != "") {                                                       
}
i++;                                                                      
}
return Result;                                                              
}
function ParseLines() {
local int i;
local string str;
Super.ParseLines();                                                         
if (Lines.Length == 0) {                                                    
return;                                                                   
}
i = 0;                                                                      
while (i < Lines.Length) {                                                  
if (Left(Lines[i],1) == "#" || Lines[i] == "") {                          
} else {                                                                  
str = Lines[i];                                                         
if (Left(str,1) == static.GetPathSeparator()) {                         
str = Mid(str,1);                                                     
}
Paths[Paths.Length] = MatchPath(str);                                   
}
i++;                                                                      
}
}
function bool Import(int PlaylistIndex,int InsertPosition,string Path) {
if (Outer.FileManager.LoadPlaylist(Path,Lines)
&& static.ParsePath(Path,ParsedPath)) {
ImportedPlaylist(PlaylistIndex,InsertPosition);                           
return True;                                                              
}
return False;                                                               
}
*/
