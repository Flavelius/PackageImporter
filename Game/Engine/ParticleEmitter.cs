//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using Engine;
using SBAI;
using SBAIScripts;
using SBBase;
using SBGame;
using SBGamePlay;
using SBMiniGames;
using System;
using System.Collections;
using System.Collections.Generic;
using TCosReborn.Framework.Common;


namespace Engine
{
    
    
    public class ParticleEmitter : UObject
    {
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Collision")]
        public bool UseCollision;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Collision")]
        public bool UseCollisionPlanes;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Collision")]
        public bool UseMaxCollisions;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Collision")]
        public bool UseSpawnedVelocityScale;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Color")]
        public bool UseColorScale;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Fading")]
        public bool FadeOut;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Fading")]
        public bool FadeIn;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Force")]
        public bool UseActorForces;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="General")]
        public bool ResetAfterChange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Local")]
        public bool RespawnDeadParticles;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Local")]
        public bool AutoDestroy;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Local")]
        public bool AutoReset;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Local")]
        public bool Disabled;
        
        public bool Backup_Disabled;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Local")]
        public bool DisableFogging;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="MeshSpawning")]
        public bool VelocityFromMesh;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="MeshSpawning")]
        public bool UniformMeshScale;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="MeshSpawning")]
        public bool UniformVelocityScale;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="MeshSpawning")]
        public bool UseColorFromMesh;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="MeshSpawning")]
        public bool SpawnOnlyInDirectionOfNormal;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Rendering")]
        public bool AlphaTest;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Rendering")]
        public bool AcceptsProjectors;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Rendering")]
        public bool ZTest;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Rendering")]
        public bool ZWrite;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Revolution")]
        public bool UseRevolution;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Revolution")]
        public bool UseRevolutionScale;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Rotation")]
        public bool SpinParticles;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Rotation")]
        public bool DampRotation;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Size")]
        public bool UseSizeScale;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Size")]
        public bool UseAbsoluteTimeForSizeScale;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Size")]
        public bool UseRegularSizeScale;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Size")]
        public bool UniformSize;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Size")]
        public bool DetermineVelocityByLocationDifference;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Size")]
        public bool ScaleSizeXByVelocity;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Size")]
        public bool ScaleSizeYByVelocity;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Size")]
        public bool ScaleSizeZByVelocity;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Size")]
        public float LocalDrawScale;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Spawning")]
        public bool AutomaticInitialSpawning;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Texture")]
        public bool BlendBetweenSubdivisions;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Texture")]
        public bool UseSubdivisionScale;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Texture")]
        public bool UseRandomSubdivision;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Trigger")]
        public bool TriggerDisabled;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Trigger")]
        public bool TriggerRespawnDeadParticles;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Trigger")]
        public bool ResetOnTrigger;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Velocity")]
        public bool UseVelocityScale;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Velocity")]
        public bool AddVelocityFromOwner;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Performance")]
        public float LowDetailFactor;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Acceleration")]
        public Vector Acceleration;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Collision")]
        public Vector ExtentMultiplier;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Collision")]
        public RangeVector DampingFactorRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Collision")]
        public List<Plane> CollisionPlanes = new List<Plane>();
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Collision")]
        public Range MaxCollisions;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Collision")]
        public int SpawnFromOtherEmitter;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Collision")]
        public int SpawnAmount;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Collision")]
        public RangeVector SpawnedVelocityScaleRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Color")]
        public List<ParticleColorScale> ColorScale = new List<ParticleColorScale>();
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Color")]
        public float ColorScaleRepeats;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Color")]
        public RangeVector ColorMultiplierRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Color")]
        public float Opacity;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Fading")]
        public Plane FadeOutFactor;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Fading")]
        public float FadeOutStartTime;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Fading")]
        public Plane FadeInFactor;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Fading")]
        public float FadeInEndTime;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="General")]
        public byte CoordinateSystem;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="General")]
        [TCosReborn.Framework.Attributes.FieldConstAttribute()]
        public int MaxParticles;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="General")]
        public bool SBEnforceMaxParticles;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="General")]
        public byte EffectAxis;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Local")]
        public Range AutoResetTimeRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Local")]
        public string Name = string.Empty;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Local")]
        public byte DetailMode;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Location")]
        public Vector StartLocationOffset;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Location")]
        public RangeVector StartLocationRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Location")]
        public int AddLocationFromOtherEmitter;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Location")]
        public byte StartLocationShape;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Location")]
        public Range SphereRadiusRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Location")]
        public RangeVector StartLocationPolarRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Mass")]
        public Range StartMassRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="MeshSpawning")]
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        public StaticMesh MeshSpawningStaticMesh;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="MeshSpawning")]
        public byte MeshSpawning;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="MeshSpawning")]
        public RangeVector VelocityScaleRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="MeshSpawning")]
        public RangeVector MeshScaleRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="MeshSpawning")]
        public Vector MeshNormal;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="MeshSpawning")]
        public Range MeshNormalThresholdRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Rendering")]
        public int AlphaRef;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Revolution")]
        public RangeVector RevolutionCenterOffsetRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Revolution")]
        public RangeVector RevolutionsPerSecondRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Revolution")]
        public List<ParticleRevolutionScale> RevolutionScale = new List<ParticleRevolutionScale>();
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Revolution")]
        public float RevolutionScaleRepeats;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Rotation")]
        public byte UseRotationFrom;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Rotation")]
        public Rotator RotationOffset;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Rotation")]
        public Vector SpinCCWorCW;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Rotation")]
        public RangeVector SpinsPerSecondRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Rotation")]
        public RangeVector StartSpinRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Rotation")]
        public RangeVector RotationDampingFactorRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Rotation")]
        public Vector RotationNormal;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Size")]
        public List<ParticleTimeScale> SizeScale = new List<ParticleTimeScale>();
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Size")]
        public float SizeScaleRepeats;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Size")]
        public RangeVector StartSizeRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Size")]
        public Vector ScaleSizeByVelocityMultiplier;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Size")]
        public float ScaleSizeByVelocityMax;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="SkeletalMesh")]
        public byte UseSkeletalLocationAs;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="SkeletalMesh")]
        public Actor SkeletalMeshActor;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="SkeletalMesh")]
        public Vector SkeletalScale;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="SkeletalMesh")]
        public Range RelativeBoneIndexRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Sound")]
        public List<ParticleSound> Sounds = new List<ParticleSound>();
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Sound")]
        public byte SpawningSound;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Sound")]
        public Range SpawningSoundIndex;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Sound")]
        public Range SpawningSoundProbability;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Sound")]
        public byte CollisionSound;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Sound")]
        public Range CollisionSoundIndex;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Sound")]
        public Range CollisionSoundProbability;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Spawning")]
        public float ParticlesPerSecond;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Spawning")]
        public float InitialParticlesPerSecond;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Texture")]
        public byte DrawStyle;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Texture")]
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        public Texture Texture;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Texture")]
        public int TextureUSubdivisions;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Texture")]
        public int TextureVSubdivisions;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Texture")]
        public List<float> SubdivisionScale = new List<float>();
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Texture")]
        public int SubdivisionStart;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Texture")]
        public int SubdivisionEnd;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Tick")]
        public float SecondsBeforeInactive;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Tick")]
        public float MinSquaredVelocity;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Time")]
        public Range InitialTimeRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Time")]
        public Range LifetimeRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Time")]
        public Range InitialDelayRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Trigger")]
        public Range SpawnOnTriggerRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Trigger")]
        public float SpawnOnTriggerPPS;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Velocity")]
        public RangeVector StartVelocityRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Velocity")]
        public Range StartVelocityRadialRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Velocity")]
        public Vector MaxAbsVelocity;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Velocity")]
        public RangeVector VelocityLossRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Velocity")]
        public bool RotateVelocityLossRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Velocity")]
        public int AddVelocityFromOtherEmitter;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Velocity")]
        public RangeVector AddVelocityMultiplierRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Velocity")]
        public byte GetVelocityDirectionFrom;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Velocity")]
        public List<ParticleVelocityScale> VelocityScale = new List<ParticleVelocityScale>();
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Velocity")]
        public float VelocityScaleRepeats;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Warmup")]
        public float WarmupTicksPerSecond;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Warmup")]
        public float RelativeWarmupTime;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Environment")]
        public byte EnvironmentIndex;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float DensityMultiplier;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float SizeMultiplier;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float VelocityMultiplier;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public byte HueModifier;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float SaturationMultiplier;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float BrightnessMultiplier;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float OpacityMultiplier;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public Range StoredMassRange;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public RangeVector StoredVelocityRange;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public Vector StoredMaxAbsVelocity;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float StoredParticlesPerSecond;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float StoredInitialParticlesPerSecond;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public RangeVector StoredSizeRange;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public Range StoredLifetimeRange;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int StoredMaxParticles;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int StoredMaxActiveParticles;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public RangeVector StoredColorMultiplier;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float StoredOpacity;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public Emitter Owner;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public bool Initialized;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public bool Inactive;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public bool RealDisableFogging;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public bool AllParticlesDead;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public bool WarmedUp;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float InactiveTime;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public List<Particle> Particles = new List<Particle>();
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int ParticleIndex;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int ActiveParticles;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float PPSFraction;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public Box BoundingBox;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public Vector RealExtentMultiplier;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int OtherIndex;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float InitialDelay;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public Vector GlobalOffset;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float TimeTillReset;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int PS2Data;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int MaxActiveParticles;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int CurrentCollisionSoundIndex;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int CurrentSpawningSoundIndex;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int CurrentMeshSpawningIndex;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float MaxSizeScale;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int KillPending;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int DeferredParticles;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public Vector RealMeshNormal;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public List<Vector> MeshVertsAndNormals = new List<Vector>();
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int CurrentSpawnOnTrigger;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int RenderableParticles;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public RangeVector RealVelocityLossRange;
        
        public ParticleEmitter()
        {
        }
        
        public struct ParticleSound
        {
            
            public Sound Sound;
            
            public Range Radius;
            
            public Range Pitch;
            
            public int Weight;
            
            public Range Volume;
            
            public Range Probability;
        }
        
        public struct Particle
        {
            
            public Vector Location;
            
            public Vector OldLocation;
            
            public Vector Velocity;
            
            public Vector StartSize;
            
            public Vector SpinsPerSecond;
            
            public Vector StartSpin;
            
            public Vector RevolutionCenter;
            
            public Vector RevolutionsPerSecond;
            
            public Vector RevolutionsMultiplier;
            
            public Vector Size;
            
            public Vector StartLocation;
            
            public Vector ColorMultiplier;
            
            public Vector VelocityMultiplier;
            
            public Vector OldMeshLocation;
            
            public Color Color;
            
            public float Time;
            
            public float MaxLifetime;
            
            public float Mass;
            
            public int HitCount;
            
            public int flags;
            
            public int Subdivision;
            
            public int BoneIndex;
            
            public Rotator OldRotation;
        }
        
        public struct ParticleVelocityScale
        {
            
            public float RelativeTime;
            
            public Vector RelativeVelocity;
        }
        
        public struct ParticleColorScale
        {
            
            public float RelativeTime;
            
            public Color Color;
        }
        
        public struct ParticleRevolutionScale
        {
            
            public float RelativeTime;
            
            public Vector RelativeRevolution;
        }
        
        public struct ParticleTimeScale
        {
            
            public float RelativeTime;
            
            public float RelativeSize;
        }
        
        public enum EEmitterChannel
        {
            
            EC_NONE ,
            
            EC_EMITTER0 ,
            
            EC_EMITTER1 ,
            
            EC_EMITTER2 ,
            
            EC_EMITTER3 ,
            
            EC_EMITTER4 ,
            
            EC_EMITTER5 ,
            
            EC_EMITTER6 ,
            
            EC_EMITTER7,
        }
        
        public enum ESkelLocationUpdate
        {
            
            PTSU_None ,
            
            PTSU_SpawnOffset ,
            
            PTSU_Location,
        }
        
        public enum EParticleMeshSpawning
        {
            
            PTMS_None ,
            
            PTMS_Linear ,
            
            PTMS_Random ,
            
            PTMS_LinearInverted,
        }
        
        public enum EParticleCollisionSound
        {
            
            PTSC_None ,
            
            PTSC_LinearGlobal ,
            
            PTSC_LinearLocal ,
            
            PTSC_Random,
        }
        
        public enum EParticleEffectAxis
        {
            
            PTEA_NegativeX ,
            
            PTEA_PositiveZ,
        }
        
        public enum EParticleStartLocationShape
        {
            
            PTLS_Box ,
            
            PTLS_Sphere ,
            
            PTLS_Polar ,
            
            PTLS_All,
        }
        
        public enum EParticleVelocityDirection
        {
            
            PTVD_None ,
            
            PTVD_StartPositionAndOwner ,
            
            PTVD_OwnerAndStartPosition ,
            
            PTVD_AddRadial,
        }
        
        public enum EParticleRotationSource
        {
            
            PTRS_None ,
            
            PTRS_Actor ,
            
            PTRS_Offset ,
            
            PTRS_Normal,
        }
        
        public enum EParticleCoordinateSystem
        {
            
            PTCS_Independent ,
            
            PTCS_Relative ,
            
            PTCS_Absolute,
        }
        
        public enum EParticleDrawStyle
        {
            
            PTDS_Regular ,
            
            PTDS_AlphaBlend ,
            
            PTDS_Modulated ,
            
            PTDS_Translucent ,
            
            PTDS_AlphaModulate_MightNotFogCorrectly ,
            
            PTDS_Darken ,
            
            PTDS_Brighten,
        }
        
        public enum EBlendMode
        {
            
            BM_MODULATE ,
            
            BM_MODULATE2X ,
            
            BM_MODULATE4X ,
            
            BM_ADD ,
            
            BM_ADDSIGNED ,
            
            BM_ADDSIGNED2X ,
            
            BM_SUBTRACT ,
            
            BM_ADDSMOOTH ,
            
            BM_BLENDDIFFUSEALPHA ,
            
            BM_BLENDTEXTUREALPHA ,
            
            BM_BLENDFACTORALPHA ,
            
            BM_BLENDTEXTUREALPHAPM ,
            
            BM_BLENDCURRENTALPHA ,
            
            BM_PREMODULATE ,
            
            BM_MODULATEALPHA_ADDCOLOR ,
            
            BM_MODULATEINVALPHA_ADDCOLOR ,
            
            BM_MODULATEINVCOLOR_ADDALPHA ,
            
            BM_HACK,
        }
    }
}
/*
native function ScaleFactor(float aFactor);
native function Reset();
native function UnTrigger();
native function Trigger();
native function SpawnParticle(int Amount);
*/
