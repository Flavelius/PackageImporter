//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using Engine;
using SBAI;
using SBAIScripts;
using SBBase;
using SBGame;
using SBGamePlay;
using SBMiniGames;
using System;
using System.Collections;
using System.Collections.Generic;
using TCosReborn.Framework.Common;


namespace Engine
{
    
    
    public class BeamEmitter : ParticleEmitter
    {
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Beam")]
        public Range BeamDistanceRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Beam")]
        public List<ParticleBeamEndPoint> BeamEndPoints = new List<ParticleBeamEndPoint>();
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Beam")]
        public byte DetermineEndPointBy;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Beam")]
        public float BeamTextureUScale;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Beam")]
        public float BeamTextureVScale;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Beam")]
        public int RotatingSheets;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="Beam")]
        public bool TriggerEndpoint;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamNoise")]
        public RangeVector LowFrequencyNoiseRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamNoise")]
        public int LowFrequencyPoints;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamNoise")]
        public RangeVector HighFrequencyNoiseRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamNoise")]
        public int HighFrequencyPoints;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamNoise")]
        public List<ParticleBeamScale> LFScaleFactors = new List<ParticleBeamScale>();
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamNoise")]
        public List<ParticleBeamScale> HFScaleFactors = new List<ParticleBeamScale>();
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamNoise")]
        public float LFScaleRepeats;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamNoise")]
        public float HFScaleRepeats;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamNoise")]
        public bool UseHighFrequencyScale;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamNoise")]
        public bool UseLowFrequencyScale;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamNoise")]
        public bool NoiseDeterminesEndPoint;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamNoise")]
        public RangeVector DynamicHFNoiseRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamNoise")]
        public Range DynamicHFNoisePointsRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamNoise")]
        public Range DynamicTimeBetweenNoiseRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamBranching")]
        public bool UseBranching;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamBranching")]
        public Range BranchProbability;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamBranching")]
        public Range BranchHFPointsRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamBranching")]
        public int BranchEmitter;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamBranching")]
        public Range BranchSpawnAmountRange;
        
        [TCosReborn.Framework.Attributes.FieldCategoryAttribute(Category="BeamBranching")]
        public bool LinkupLifetime;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int SheetsUsed;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int VerticesPerParticle;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int IndicesPerParticle;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public int PrimitivesPerParticle;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float BeamValueSum;
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public List<ParticleBeamData> HFPoints = new List<ParticleBeamData>();
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public List<Vector> LFPoints = new List<Vector>();
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public List<Actor> HitActors = new List<Actor>();
        
        [TCosReborn.Framework.Attributes.IgnoreFieldExtractionAttribute()]
        [TCosReborn.Framework.Attributes.FieldTransientAttribute()]
        public float TimeSinceLastDynamicNoise;
        
        public BeamEmitter()
        {
        }
        
        public struct ParticleBeamScale
        {
            
            public Vector FrequencyScale;
            
            public float RelativeLength;
        }
        
        public struct ParticleBeamEndPoint
        {
            
            public NameProperty ActorTag;
            
            public RangeVector Offset;
            
            public float Weight;
        }
        
        public struct ParticleBeamData
        {
            
            public Vector Location;
            
            public float t;
        }
        
        public enum EBeamEndPointType
        {
            
            PTEP_Velocity ,
            
            PTEP_Distance ,
            
            PTEP_Offset ,
            
            PTEP_Actor ,
            
            PTEP_TraceOffset ,
            
            PTEP_OffsetAsAbsolute ,
            
            PTEP_DynamicDistance,
        }
    }
}
