//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using Engine;
using SBAI;
using SBAIScripts;
using SBBase;
using SBGame;
using SBGamePlay;
using SBMiniGames;
using System;
using System.Collections;
using System.Collections.Generic;
using Framework.Attributes;

namespace SBBase
{
    
    
    [System.Serializable] public class Base_GameInfo : GameInfo
    {
        
        [IgnoreFieldExtraction()]
        [FieldTransient()]
        private int d_relevance_object_vtbl;
        
        [IgnoreFieldExtraction()]
        [FieldTransient()]
        private int d_relevance_object_mRelevanceObjectID;
        
        [IgnoreFieldExtraction()]
        [FieldTransient()]
        private int d_relevance_object_mpRelevance;
        
        [IgnoreFieldExtraction()]
        [FieldTransient()]
        private int d_relevance_object_mpMatineeObject;
        
        [IgnoreFieldExtraction()]
        [FieldTransient()]
        private int d_relevance_object_mBlockIndexX;
        
        [IgnoreFieldExtraction()]
        [FieldTransient()]
        private int d_relevance_object_mBlockIndexY;
        
        [IgnoreFieldExtraction()]
        [FieldTransient()]
        private int d_relevance_object_mVisibilityLevel;
        
        [IgnoreFieldExtraction()]
        [FieldTransient()]
        private int d_relevance_object_mbVisible;
        
        [IgnoreFieldExtraction()]
        [FieldTransient()]
        private int d_relevance_object_mbGM;
        
        public int HackFlags;
        
        public float mFixedRelativeTimeOfDay;
        
        [FieldCategory(Category="Base_GameInfo")]
        [TypeProxyDefinition(TypeName="Base_Controller")]
        public System.Type mPlayerControllerClass;
        
        [FieldCategory(Category="Base_GameInfo")]
        [TypeProxyDefinition(TypeName="Base_Controller")]
        public System.Type mTestBotControllerClass;
        
        [FieldCategory(Category="Base_GameInfo")]
        [TypeProxyDefinition(TypeName="Base_Controller")]
        public System.Type mGameMasterControllerClass;
        
        public Base_GameInfo()
        {
        }
    }
}
/*
event cl_OnUpdate();
event cl_OnFrame(float delta);
event cl_OnLogout(Actor controllerActor) {
local Base_Controller Controller;
local Base_Pawn Pawn;
if (controllerActor != None) {                                              
Controller = Base_Controller(controllerActor);                            
if (Controller.Pawn != None) {                                            
Pawn = Base_Pawn(Controller.Pawn);                                      
Pawn.cl_OnShutdown();                                                   
Controller.cl_OnShutdown();                                             
Pawn.Destroy();                                                         
Controller.Destroy();                                                   
} else {                                                                  
Controller.cl_OnShutdown();                                             
Controller.Destroy();                                                   
}
}
}
event cl_OnBaseline();
event sv_OnLogout(int aAccountID,Base_Pawn aPawn) {
local Base_Controller Controller;
if (aPawn != None) {                                                        
Controller = Base_Controller(aPawn.Controller);                           
aPawn.sv_OnShutdown();                                                    
Controller.sv_OnShutdown();                                               
aPawn.Destroy();                                                          
Controller.Destroy();                                                     
}
}
*/
