//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using Engine;
using SBAI;
using SBAIScripts;
using SBBase;
using SBGame;
using SBGamePlay;
using SBMiniGames;
using System;
using System.Collections;
using System.Collections.Generic;
using Framework.Attributes;

namespace SBGamePlay
{
    
    
    [System.Serializable] public class Interaction_EffectOn : Interaction_Component
    {
        
        [FieldCategory(Category="Interaction_EffectOn")]
        public NameProperty EffectTag;
        
        [FieldCategory(Category="Interaction_EffectOn")]
        public List<FSkill_EffectClass_AudioVisual> Effects = new List<FSkill_EffectClass_AudioVisual>();
        
        public Interaction_EffectOn()
        {
        }
    }
}
/*
function ClOnStart(Game_Actor aOwner,Game_Pawn aInstigator,bool aReverse) {
local InteractiveLevelElement ile;
local int ei;
Super.ClOnStart(aOwner,aInstigator,aReverse);                               
ile = InteractiveLevelElement(aOwner);                                      
if (ile != None) {                                                          
if (!aReverse) {                                                          
ei = 0;                                                                 
while (ei < Effects.Length) {                                           
if (Effects[ei] != None) {                                            
ile.cl_StartTaggedEffect(EffectTag,Effects[ei]);                    
}
ei++;                                                                 
}
} else {                                                                  
ile.cl_StopTaggedEffects(EffectTag);                                    
}
}
}
function SvOnStart(Game_Actor aOwner,Game_Pawn aInstigator,bool aReverse) {
local InteractiveLevelElement ile;
Super.SvOnStart(aOwner,aInstigator);                                        
ile = InteractiveLevelElement(aOwner);                                      
if (ile != None) {                                                          
ile.sv_StartClientSubAction();                                            
}
}
*/
