//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using Engine;
using SBAI;
using SBAIScripts;
using SBBase;
using SBGame;
using SBGamePlay;
using SBMiniGames;
using System;
using System.Collections;
using System.Collections.Generic;
using Framework.Attributes;

namespace Engine
{
    
    
    [System.Serializable] public class MusicTrigger : Triggers
    {
        
        [FieldCategory(Category="MusicTrigger")]
        public string Song = string.Empty;
        
        [FieldCategory(Category="MusicTrigger")]
        public float FadeInTime;
        
        [FieldCategory(Category="MusicTrigger")]
        public float FadeOutTime;
        
        [FieldCategory(Category="MusicTrigger")]
        public bool FadeOutAllSongs;
        
        [IgnoreFieldExtraction()]
        [FieldTransient()]
        public bool Triggered;
        
        [IgnoreFieldExtraction()]
        [FieldTransient()]
        public int SongHandle;
        
        public MusicTrigger()
        {
        }
    }
}
/*
function Trigger(Actor Other,Pawn EventInstigator) {
if (!Triggered) {                                                           
Triggered = True;                                                         
if (FadeOutAllSongs) {                                                    
StopAllMusic(FadeOutTime);                                              
}
SongHandle = PlayMusic(Song,FadeInTime);                                  
} else {                                                                    
Triggered = False;                                                        
if (SongHandle != 0) {                                                    
StopMusic(SongHandle,FadeOutTime);                                      
} else {                                                                  
Log("WARNING: invalid song handle");                                    
}
}
}
*/
